version: "3"

services:
  # Redpanda - High-performance Kafka-compatible message broker
  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:v23.3.5
    ports:
      - "9092:9092" # Kafka API
      - "9644:9644" # Prometheus metrics
      - "8081:8081" # Schema Registry
      - "8082:8082" # REST Proxy
    environment:
      REDPANDA_RPC_SERVER_LISTEN_ADDR: 0.0.0.0
      REDPANDA_KAFKA_ADDRESS: 0.0.0.0:9092
      REDPANDA_SEED_SERVERS: ""
      REDPANDA_UNUSED_TOPIC_RETENTION_MS: 86400000
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    command:
      - redpanda
      - start
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --overprovisioned
      - --node-id=0
      - --check=false
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
      - --schema-registry-addr 0.0.0.0:8081
      - --rpc-addr 0.0.0.0:33145
      - --advertise-rpc-addr redpanda:33145

  # Redpanda Console - Web UI for managing Redpanda
  redpanda-console:
    image: docker.redpanda.com/vectorized/console:v2.3.1
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: redpanda:9092
      REDPANDA_SCHEMA_REGISTRY_URL: http://redpanda:8081
      REDPANDA_SCHEMA_REGISTRY_ENABLED: "true"
    depends_on:
      - redpanda

  # Grafana - Dashboard for metrics visualization
  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:v2.47.2
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle

  # OpenTelemetry Collector - Trace collection
  otel-collector:
    image: otel/opentelemetry-collector:0.92.0
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "8888:8888" # Prometheus metrics
    volumes:
      - ./otel/config.yaml:/etc/otel/config.yaml
    command: ["--config=/etc/otel/config.yaml"]
    depends_on:
      - prometheus

volumes:
  redpanda-data:
  grafana-data:
  prometheus-data:
